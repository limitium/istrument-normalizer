@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

title Components diagram

LAYOUT_TOP_DOWN()

AddRelTag("control", $textColor="blue", $lineColor="blue", $lineStyle = DashedLine())


System_Boundary(upstreams, "Upstreams"){

}

System_Boundary(static_ext, "External static"){
}

System_Boundary(static, "Static zone"){
    System_Ext(tee, "TEE", "gRPC TEE service")
    System_Ext(instr, "Instrument keeper", "gRPC Instruments service")
    ContainerDb(db, "Static storage", "Instrument data", "Oracle")
}

System_Boundary(kafka, "Kafka boundary"){
    Component(kafka_connect_in, "Kafka Connect", "Solace to Kafka")
    Container_Boundary(instrument_normalization, "Instrument normalization"){
        Component(receiver, "Receiver", "Kafka streams", "Checks instrument availablity and start ondemand loading if required")
        Component(router, "Router", "Kafka streams","Route message to downstreams")
        Component(reducer, "Reducer", "Kafka streams", "Reduce number of instruments lookups to one per 5 min")
        Component(seeker, "Seeker", "Kafka streams", "Lookup instrument in external providers, spawn drainers on complete")
        Component(combiner, "Combiner", "Kafka streams", "Combines shelved messages with resolved instrument data")
    }
    Component(kafka_connect_out, "Kafka Connect", "Kafka to Solace")
}

Rel(receiver, reducer, "Missing instrument", "kafka")
Rel(receiver, combiner, "Original message", "kafka")

Rel(reducer, seeker, "Instrument lookup request", "kafka")
Rel(static_ext, seeker, "Instrument data", "pdl/rest")
Rel(seeker, instr, "Store instrument", "gRPC")
Rel(seeker, combiner, "Resolved instrument", "kafka")

Rel(receiver, router, "Message enriched with instrument", "kafka")
Rel(router, kafka_connect_out, "Routed enriched message", "kafka")


Rel(combiner, router, "Shelved original message+instrument", "kafka")

Rel(upstreams, kafka_connect_in, "Incoming message", "solace")
Rel(kafka_connect_in, receiver, "Incoming message", "kafka")

BiRel(instr, db, "Select/Insert", "jdbi")
Rel(tee, router, "teeRoute", "gRPC")
Rel(instr, receiver, "instrumentData", "gRPC")

Rel(seeker, kafka_connect_out, "New instrument meta", "kafka")

Rel(kafka_connect_out, downstreams, "Outgoing message", "solace")


System_Boundary(downstreams, "Downstreams"){

}

Lay_L(instrument_normalization, static)

@enduml
