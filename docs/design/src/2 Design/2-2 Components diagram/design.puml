@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

title Components diagram


AddRelTag("control", $textColor="blue", $lineColor="blue", $lineStyle = DashedLine())


System_Boundary(upstreams, "Upstreams"){

}

System_Boundary(static_ext, "External static"){
}

System_Boundary(static, "Static zone"){
    System_Ext(instr, "Instrument keeper", "gRPC Instruments service")
    ContainerDb_Ext(db, "Instrument data", "Refshared", "Oracle")
}

System_Boundary(kafka, "Kafka boundary"){
    Component_Ext(kafka_connect_in, "Kafka Connect", "Solace to Kafka, flow specific")
    Container_Boundary(instrument_normalization, "Instrument normalization"){
        Component(receiver, "Receiver", "Kafka streams", "Checks instrument availablity and start ondemand loading if required, shelves messages")
        Component(reducer, "Reducer", "Kafka streams", "Reduce number of instruments lookups to one per 5 min")
        Component(seeker, "Seeker", "Kafka streams", "Lookup instrument in external providers, spawn drainers on complete")
    }
    Component_Ext(downstreams, "Downstreams", "Flow specific Kafka consumers")
}

Rel(receiver, reducer, "3.2 Lookup instrument request", "gba.instrument.internal.reduce.lookupInstrument")

Rel(reducer, seeker, "4. Lookup instrument request", "gba.instrument.internal.lookupInstrument")
Rel(static_ext, seeker, "Instrument data", "pdl/rest")
Rel(receiver, instr, "Store instrument", "gRPC")
Rel(seeker, receiver, "5. Instrument lookup response", "gba.instrument.internal.instrumentLookuped")

Rel(receiver, downstreams, "3.1/6 Original message enriched with the instrument", "kafka, flow specific topic")

Rel(upstreams, kafka_connect_in, "1. Incoming message", "solace")
Rel(kafka_connect_in, receiver, "2. Normalization request", "gba.upstream.domain.{business-flow}.{event-type}.normalizeInstrument")

BiRel(instr, db, "Select/Upsert", "jdbi")
Rel(instr, receiver, "instrumentData", "gRPC")


Lay_L(instrument_normalization, static)
Lay_D(receiver,seeker)

@enduml
