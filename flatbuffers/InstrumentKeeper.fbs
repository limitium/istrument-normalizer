namespace com.bnpparibas.gban.instrumentkeeper.grpc;

/**
================================== Unions ==================================
*/
union Instrument {Equity, Delta1, Warrant}

/**
================================== gRPC API ==================================
*/
rpc_service InstrumentKeeper {
    /**
    * Returns Instrument by public id, public id is uniq across all types of instruments.
    *
    * @param Id with instrument public id
    * @return InstrumentResponse with Instrument or with error message
    */
    GetBy(Id):                     InstrumentResponse    (streaming: "none");

    /**
    * Lookups instrument from partial information about it, so some ambiguity or incorrect lookup may occur.
    * Bassicaly there are 3 stages of lookup:
    * 1. Determine {@code security_id_source} from alphanumeric definition of {@code securty_id}. E.g. IBM.N -> RIC
    * 2. Fetch instruments with known {@code security_id_source} and {@code security_id}
    *       Fetch priority:
    *           - Equities
    *           - Bonds
    *           - Options
    * 3. Reduce set of instruments to one using primary flags or additinal data from request for ex. currency
    *
    * @param LookupRequest
    * @return InstrumentResponse with book or with error message
    */
    LookupBy(LookupRequest):       InstrumentResponse    (streaming: "none");

    /**
    * Lookups for instrument public id with the same logic as {@code LookupBy}
    *
    * @param LookupRequest
    * @return IdResponse with instrument public id or with error message
    */
    LookupIdBy(LookupRequest):     IdResponse            (streaming: "none");

    /**
    * Inserts or updates instrument
    *
    * @param Instrument
    * @return IdResponse with instrument public id or with error message
    */
    Upsert(UpsertRequest):            IdResponse            (streaming: "none");
}

/**
================================== Requests ==================================
*/

/**
* Public id of any object
*/
table Id {
    id:                            long;
}

/**
* Client representation of raw instrument data
*/
table LookupRequest {
    security_id:                   string;
    country:                       string;       // todo: where this comes from?
    trading_currency:              string;
}

/**
* Wraps instrument for upsert
*/
table UpsertRequest {
    instrument:                    Instrument;
}

/**
================================== Responses ==================================
*/
enum Status: byte {
    SUCCESS,
    ERROR_CLIENT,                                // No reason for retry. for ex. partially filled request.
    ERROR_SERVER                                 // Can be retried
}

table IdResponse {
    id:                            long;
    status:                        Status;
    status_message:                string;
}

table InstrumentResponse {
    instrument:                    Instrument;
    status:                        Status;
    status_message:                string;
}

/**
================================== Messages ==================================
*/


/**
  General security definiton
*/
table Security {
    isin:                          string;       // Equity.isin security id on different exchanges. one per world
    asset_category:                string;       // Equity.asset_category human redable per ISIN
    description:                   string;       // Equity.description used by GUI and confirm per ISIN

    country_of_risk:               string;       // Equity.country_of_risk country of securities legal entity

    ccp_eligible:                  bool = false; // Equity.ccp_eligible_flag can be sent to BATS for EROPE, but per ISIN

    taxes: Taxes;
}

/**
  Exchange wehere current instrument is listing
*/
table ListingExchange {
    rec:                           string;       // Equity.listing_exchange reuters exchange code
    mic:                           string;       // Equity.mic listing exhange another idetifier wtf iso
    country:                       string;       // Equity.country_of_listing current listing
    currency:                      string;       // Equity.currency of listing exchange  for instrument in converted to MAJOR
    original_currency:             string;       // Equity.original_currency of listing exchange  for instrument real
}

/**
  Exchange where IPO of securiy happened
*/
table IssueExchange {
    bloomberg_code:                string;       // Equity.bb_prime_exchange where IPO happened in bloomberg code
    shares_outstanding:            long;         // Equity.shares_outstanding IPO amount of instruments
    country_of_issue:              string;       // Equity.country_of_issue IPO where happened
}

table Taxes {
    france_financial_transaction:  bool = false; // Equity.fft_flag france additinal charges for some instrument transactional tax per ISIN
    italy_financial_transaction:   bool = false; // Equity.itt_flag italy additinal charges for some instrument transactional tax per ISIN
    spain_financial_transaction:   bool = false; // Equity.sftt_flag spain additinal charges for some instrument transactional tax per ISIN

    ptm_levy:                      bool = false; // Equity.ptm_levy_eligible only for LSE to add one tax ptm lvy
    stamp_duty:                    bool = false; // Equity.stamp_duty_eligible for 3 echanges flag to add stamp tax

    warraned_equity_taxed:         bool = false; // Equity.equity_underlying_flag todo: what tax? can other flags be used? or extracted to warrant if warants on equity and equity has tax it need to be taken from warrant too
}

table Power {
    mds_code:                      string;       // Equity.mds_code power specific instrrument identifier
    place_code:                    string;       // Equity.place_code power specific exchange identifier
}

/**
  Concrete definition of instrument on listing exchange
*/
table Equity {                                   // @todo: complete splitting!!!
    id:                            long;         // Equity.instrument_id

    ric:                           string;       // Equity.ric id concrete instrument. ROUTERS main identifier in GBA
    sedol:                         string;       // Equity.mic_sedol SEDOL uniq for UK exchanges
    cusip:                         string;       // Equity.cusip CUSIP uniq for US and Canada exhanges
    bloomberg:                     string;       // Equity.bb_cticker bloomberg_root_ticker + exchange code + market sector
    bloomberg_root:                string;       // Equity.bb_root_ticker identifies legal entity or company
    cins:                          string;       // Equity.cins international extension of the CUSIP, non uniq, must be used with CUSIP
    gba_ticker:                    string;       // Equity.ticker custom made from rick withou suffix

    cfi_code:                      string;       // Equity.cfi_code todo: check usage! classification of financial instruments

    is_global_primary:             bool = false; // Equity.is_global_primary Y on instrument wich was in IPO
    is_country_primary:            bool = false; // Equity.regional_primary_flag Y on country level entrypoint exchange for instrument

    is_custom_basket:              bool = false; // Equity.is_custom_basket cunstom indexes created by BANK in general not listed.  asset_category=='DELTA1', indicates what source API was used todo: why?
    is_warrant:                    bool = false; // Equity.is_warrant indicates what source API was used todo: why?

    is_international_settllement:  bool = false; // Equity.international_settllement_flag determinces non standart clearing settlement location. for ex. GB->euro_clear instead of CREST

    security:                      Security;
    listing_exchange:              ListingExchange;
    issue_exchange:                IssueExchange;

    power:                         Power;

    active:                        bool = true; // Equity.active
    created:                       long;        // Equity.created
    last_modified:                 long;        // Equity.last_modified
    last_modified_user:            string;      // Equity.last_modified_user
}


table Delta1 {
    id:                            long;         // Equity.instrument_id
    description:                   string;       // Equity.description used by GUI and confirm per ISIN

    ric:                           string;       // Equity.ric id concrete instrument. ROUTERS main identifier in GBA
    isin:                          string;       // Equity.isin security id on different exchanges. one per world

    original_currency:             string;       // Equity.original_currency of listing exchange  for instrument real
    country:                       string;       // Equity.country_of_listing current listing

    is_custom_basket:              bool = false; // Equity.is_custom_basket cunstom indexes created by BANK in general not listed.  asset_category=='DELTA1', indicates what source API was used todo: why?

    cfi_code:                      string;       // Equity.cfi_code todo: check usage! classification of financial instruments

    mds_code:                      string;       // Equity.mds_code power specific instrrument identifier
}

table Warrant {
    is_international_settllement:  bool = false; // Equity.international_settllement_flag determinces non standart clearing settlement location. for ex. GB->euro_clear instead of CREST
}

