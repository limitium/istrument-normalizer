enum Type:byte {
    NEW,
    AMEND,
    CANCEL
}

enum Side:byte {
    BUY = 1,
    SELL_LONG = 2,
    SELL_SHORT = 5
}

enum TimeInForce:byte {
    DAY = 0,
    GTC = 1,
    AT_OPEN = 2,
    IOC = 3,
    FOK = 4,
    GTD = 6
}

enum Capacity:byte {
    P, // principal
    A, // agency and default
    R, // riskless principal
    M, // mixed capacity
}

enum OrderType:byte { // Fix values are used
    Market = 1,
    Limit = 2,
    Stop = 3,
    StopLimit = 4,
}

/**
Identifiers of order in clients system.
*/
table ClientSystem{
    name: string;
    order_id: string; //todo: does client has execution objects and IDs?
}
/**
Identifiers of order in system which accepts order from client
*/
table AcceptSystem {
    name: string;
    client_id: string; // client username registered in FO
    order_id: string;
}
/**
Identifiers of order in FO order managment system. Can aggregeate or split client orders
*/
table OrderManagmentSystem {
    name: string;
    execution_id: string; //todo: on OM exec id appears first time?
    order_id: string;
}
/**
Identifiers of order in system wich execute orders on the market
*/
table ExecutionSystem {
    name: string;
    execution_id: string;
    order_id: string;
}
/**
Representation of FO for concrete execution. Some parts can be missed.
*/
table FrontOffice{ //todo: merge of US flow?
    client_system: ClientSystem;
    accept_system: AcceptSystem;
    order_manament_system: OrderManagmentSystem;
    exection_system: ExecutionSystem;
}

table Order {
    side: Side = BUY; // Side direction from client perspective
    order_type: OrderType = Market;
    time_in_force: TimeInForce;
    capacity: Capacity = A;

    security_id: string; // FO or client instrument identifier. Can ber RIC, ISIN etc
    instrument_id: long; // gba instrument public identifier

    portfolio_code: string; // FO representation of client AVP group
    book_id: long; // gba book public identifier
}

table Broker {
    swift_code: string; // FO representation of the broker, Broker BIC code
    broker_id: long; // gba broker public identifier

    execution_id: string;
    order_id: string;
}

table Exchage {
    name: string; // name of market, Markter Exchange CCP code of birge

    execution_id: string;
    order_id: string;
}

table Execution{
    id: long; // GBA generated public identifier
    type: Type = NEW;

    last_qty: double;
    last_price: double;

    transact_time: long;

    last_market: string; //name of market where execution was really executed todo: can broker have different last_markets per single order, do we need it if we have exchange?
}

//flowtype - low level, DCA category of flows low latencey direct market acess, low latency algo, Different desk. DMA diirect market acess mininal comission all by client , program trading per busket -> split, single stok - grate order to manual wrok on it.
//in BNPP DMA splitted on 10 subtype. ALGO, SMART ORDER ROUTER.
//businesstype - GES and PB - cash agency and swap primery broker analog product type

union Executor {Broker, Exchange} //todo: executor what's a real business term??

table UsStreetExecution {
 front_office: FrontOffice;
 executor: Executor;
 order: Order;
 execution: Execution;
}

root_type UsStreetExecution;
