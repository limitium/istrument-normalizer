namespace com.bnpparibas.gban.communication.messages.domain.executionreports.flatbuffers;

enum FbType: byte {
    NEW,
    CANCEL
}

enum FbSide: byte {
    BUY               = 1,
    SELL_LONG         = 2,
    SELL_SHORT        = 5
}

enum FbTimeInForce: byte {
    DAY               = 0,
    GTC               = 1,
    AT_OPEN           = 2,
    IOC               = 3,
    FOK               = 4,
    GTD               = 6
}

enum FbCapacity: byte {
    PRINCIPAL,                              // principal
    AGENCY,                                 // agency and default
    RISKLESS,                               // riskless principal
    MARKET,                                 // mixed capacity
}

enum FbOrderType: byte {                    // Fix values are used
    MARKTET            = 1,
    LIMIT              = 2,
    STOP               = 3,
    STOP_LIMIT         = 4,
}

enum FbCounterpartyCodeType: byte {
    DTC,                                    // ATM8.ContraBroker DTC code of exchanges
    BIC                                     // ATM8.ExecutingFirm 1st 4 chars of BIC or SWIFT codes
}

enum FbCounterpartyType: byte {
    BROKER,                                 // ATM8.ExecutingFirm != null
    EXCHANGE                                // ATM8.LastMkt != null, MIC name of market where execution was really executed
}

table FbCounterParty {
    type:             FbCounterpartyType;   // ATM8.ExecutingFirm or ATM8.ContraBroker, todo: wtf LATAM empty contra but have last market
    code:             string;               // ATM8.LastMkt or ATM8.ExecutingFirm
    code_type:        FbCounterpartyCodeType;

    execution_id:     string;               // ATM8.ExchangeExecID
    order_id:         string;               // ATM8.ExchangeOrderID
}

/**
  Representation of FO for concrete execution report. Some parts can be missed.
*/
table FbFrontOffice { //todo: merge of US flow?
    name:             string;               // ATM8.SrcSysID
    instance:         string;               // ATM8.SourceSystemInstance

    execution_id:     string;               // ATM8.ExecID
    execution_ref_id: string;               // ATM8.ExecRefID
    order_id:         string;               // ATM8.OrderID
}

/**
  Representation of Order in FO in fact in order managment part
*/
table FbOrder {
    side:             FbSide      = BUY;    // ATM8.Side Side direction from client perspective
    order_type:       FbOrderType = Market; // ATM8.OrderType
    time_in_force:    FbTimeInForce;        // ATM8.TimeInForce

    security_id:      string;               // ATM8.SecurityID FO or client instrument identifier. Can ber RIC, ISIN etc
    instrument_id:    long;                 // gba instrument public identifier

    portfolio_code:   string;               // ATM8.Portfolio todo:? FO representation of client AVP group
    book_id:          long;                 // gba book public identifier
}

table FbExecutionReport {
    id:               long;                 // GBA generated public identifier
    type:             FbType = NEW;         // ATM8.ExecType
    capacity:         FbCapacity  = A;      // ATM8.Capacity

    last_qty:         double;               // ATM8.LastQty
    last_price:       double;               // ATM8.LastPx

    transact_time:    long;                 // ATM8.TransactTime
}

//flowtype - low level, DCA category of flows low latencey direct market acess, low latency algo, Different desk. DMA diirect market acess mininal comission all by client , program trading per busket -> split, single stok - grate order to manual wrok on it.
//in BNPP DMA splitted on 10 subtype. ALGO, SMART ORDER ROUTER.
//businesstype - GES and PB - cash agency and swap primery broker analog product type

table FbUsStreetExecutionReport {
    front_office:     FbFrontOffice;
    order:            FbOrder;
    counter_party:    FbCounterParty;
    execution_report: FbExecutionReport;
}

root_type FbUsStreetExecutionReport;